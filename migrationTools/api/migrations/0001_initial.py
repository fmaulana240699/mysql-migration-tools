# Generated by Django 5.0.2 on 2024-04-28 15:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='repoIntegration',
            fields=[
                ('id', models.CharField(editable=False, max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('username', models.CharField(max_length=20)),
                ('token', models.CharField(max_length=100, null=True)),
                ('repo_url', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(editable=False, max_length=5, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=20)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Viewer', 'Viewer')], max_length=20)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='migrationData',
            fields=[
                ('id', models.CharField(editable=False, max_length=12, primary_key=True, serialize=False)),
                ('sql_query', models.TextField()),
                ('status_query', models.CharField(max_length=10, null=True)),
                ('author', models.CharField(max_length=20)),
                ('error_log', models.TextField(null=True)),
                ('file_name', models.CharField(max_length=200, null=True)),
                ('db_name', models.CharField(max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id_repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repointegration')),
            ],
        ),
        migrations.CreateModel(
            name='migrationConfig',
            fields=[
                ('id', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False)),
                ('folder_location', models.CharField(max_length=20)),
                ('db_host', models.CharField(max_length=20, null=True)),
                ('db_user', models.CharField(max_length=20, null=True)),
                ('db_name', models.CharField(max_length=20, null=True)),
                ('db_password', models.CharField(max_length=100, null=True)),
                ('author', models.CharField(max_length=100, null=True)),
                ('id_repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repointegration')),
            ],
        ),
    ]
